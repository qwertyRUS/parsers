import { Markup } from 'telegraf';
import { getAvailableGazPeriods } from '../../services/gazService.js';
import { getAvailableElektroPeriods } from '../../services/elektroService.js';
import { isAdmin } from '../admin.js';
import { isAllowed } from '../middleware/userMiddleware.js';
import { showPeriodSelection } from '../menu.js';
import { userKeyboard, adminKeyboard, adminSubKeyboard } from '../keyboards.js';

export const registerMainMenuHandlers = bot => {
  bot.start(ctx => {
    const role = ctx.dbUser?.role;
    if (role === 'admin') {
      ctx.reply(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.',
        adminKeyboard
      );
    } else if (role === 'trusted') {
      ctx.reply(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ñ–ö–£ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏. –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å –≤ –º–µ–Ω—é –Ω–∏–∂–µ:',
        userKeyboard
      );
    } else {
      ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
    }
  });

  const userHelpText =
    '–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤:\n\n' +
    'üî• –ì–∞–∑–ø—Ä–æ–º - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä –ì–∞–∑–ø—Ä–æ–º –ú–µ–∂—Ä–µ–≥–∏–æ–Ω–≥–∞–∑.\n' +
    '‚ö°Ô∏è –¢–ù–°-–≠–Ω–µ—Ä–≥–æ - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä –¢–ù–°-–≠–Ω–µ—Ä–≥–æ.';

  const adminHelpText =
    '–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ —Ç–∞–∫–∂–µ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n' +
    '<b>–ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é:</b>\n' +
    'üë• –ì–æ—Å—Ç–∏ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n' +
    '‚úÖ –î–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–∞—Ä—Å–µ—Ä–∞–º.\n' +
    'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ - —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.\n' +
    'üëë –ê–¥–º–∏–Ω—ã - —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.\n\n' +
    '<b>–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ (–≤–≤–æ–¥—è—Ç—Å—è –≤—Ä—É—á–Ω—É—é):</b>\n' +
    '<code>/trust ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</code> - –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø\n' +
    '<code>/ban ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</code> - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å\n' +
    '<code>/mkguest ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</code> - —Å–¥–µ–ª–∞—Ç—å –≥–æ—Å—Ç–µ–º\n' +
    '<code>/mkadmin ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</code> - —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º';

  bot.help(ctx => {
    const role = ctx.dbUser?.role;
    if (role === 'admin') {
      ctx.replyWithHTML(adminHelpText, adminKeyboard);
    } else if (role === 'trusted') {
      ctx.reply(userHelpText, userKeyboard);
    } else {
      ctx.reply(
        '–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –≤–∞–º —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã.'
      );
    }
  });

  bot.hears('‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', isAdmin, async ctx => {
    await ctx.reply('–í—ã –≤–æ—à–ª–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.', adminSubKeyboard);
  });

  bot.hears('üî• –ì–∞–∑–ø—Ä–æ–º', isAllowed, async ctx => {
    try {
      ctx.session ??= {};
      if (ctx.session.lastMenuMessageId) {
        await ctx.deleteMessage(ctx.session.lastMenuMessageId).catch(() => {});
      }
      const periods = await getAvailableGazPeriods();
      const message = await showPeriodSelection(ctx, '–ì–∞–∑–ø—Ä–æ–º', periods);
      if (message) ctx.session.lastMenuMessageId = message.message_id;
    } catch (error) {
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–∏–æ–¥–æ–≤.');
    }
  });

  bot.hears('‚ö°Ô∏è –¢–ù–°-–≠–Ω–µ—Ä–≥–æ', isAllowed, async ctx => {
    try {
      ctx.session ??= {};
      if (ctx.session.lastMenuMessageId) {
        await ctx.deleteMessage(ctx.session.lastMenuMessageId).catch(() => {});
      }
      const periods = await getAvailableElektroPeriods();
      const message = await showPeriodSelection(ctx, '–¢–ù–°-–≠–Ω–µ—Ä–≥–æ', periods);
      if (message) ctx.session.lastMenuMessageId = message.message_id;
    } catch (error) {
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–∏–æ–¥–æ–≤.');
    }
  });

  bot.hears('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', async ctx => {
    const role = ctx.dbUser?.role;
    if (role === 'admin') {
      await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', adminKeyboard);
    } else if (role === 'trusted') {
      await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', userKeyboard);
    }
  });

  bot.on('text', ctx => {
    const isCommand =
      ctx.message.entities?.[0]?.type === 'bot_command' && ctx.message.entities[0].offset === 0;

    if (isCommand) {
      return ctx.reply(
        '–¢–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ /help.'
      );
    }

    const role = ctx.dbUser?.role;

    if (role === 'guest') {
      ctx.reply('üëã –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.', Markup.removeKeyboard());
    } else if (role === 'admin') {
      ctx.reply('–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é.', adminKeyboard);
    } else if (role === 'trusted') {
      ctx.reply('–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é.', userKeyboard);
    }
  });
};
